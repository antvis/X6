module.exports = {
  root: true,
  parser: '@typescript-eslint/parser',
  plugins: [
    '@typescript-eslint',
    'eslint-comments',
    'import',
    'flowtype',
    'jest',
    'jsx-a11y',
    'prettier',
    'promise',
    'react',
    'react-hooks',
    'unicorn',
  ],
  extends: [
    'airbnb-typescript',
    'eslint:recommended',
    'prettier',
    'plugin:@typescript-eslint/recommended',
    'plugin:jsx-a11y/recommended',
    'plugin:import/errors',
    'plugin:import/warnings',
    'plugin:promise/recommended',
    'plugin:prettier/recommended',
    'plugin:react/recommended',
    'plugin:react-hooks/recommended',
  ],
  env: {
    browser: true,
    commonjs: true,
    es6: true,
    jest: true,
    node: true,
    mocha: true,
    jasmine: true,
  },
  parserOptions: {
    ecmaVersion: 2020,
    sourceType: 'module',
    project: './tsconfig.json',
    ecmaFeatures: {
      jsx: true,
    },
    requireConfigFile: false,
  },
  settings: {
    react: {
      version: 'detect',
    },
  },
  rules: {
    'no-shadow': 0,
    'no-continue': 0,
    'no-multi-assign': 0,
    'no-nested-ternary': 0,
    'prefer-destructuring': 0,
    'class-methods-use-this': 0,
    'implicit-arrow-linebreak': 0,
    'lines-between-class-members': 0,
    'no-param-reassign': [2, { props: false }],
    'no-unused-expressions': [
      2,
      { allowShortCircuit: true, allowTernary: true },
    ],
    'no-cond-assign': [2, 'except-parens'],
    eqeqeq: [2, 'always', { null: 'ignore' }],
    'consistent-return': 0,

    'import/export': 0,
    'import/no-cycle': 0,
    'import/no-unresolved': 0,
    'import/prefer-default-export': 0,

    '@typescript-eslint/no-namespace': 0,
    '@typescript-eslint/no-explicit-any': 0,
    '@typescript-eslint/no-non-null-assertion': 0,
    '@typescript-eslint/no-empty-function': 0,
    '@typescript-eslint/no-empty-interface': 0,
    '@typescript-eslint/explicit-module-boundary-types': 0,

    camelcase: 0,
    '@typescript-eslint/camelcase': 0,

    'no-use-before-define': 0,
    '@typescript-eslint/no-use-before-define': [
      2,
      {
        classes: true,
        functions: false,
        variables: true,
        enums: false,
        typedefs: false,
        ignoreTypeReferences: true,
      },
    ],

    'no-unused-vars': 0,
    '@typescript-eslint/no-unused-vars': [
      2,
      { vars: 'all', args: 'after-used', ignoreRestSiblings: true },
    ],
  },
}
