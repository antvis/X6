name: ðŸ”‚ã€€Surge PR Preview
on:
  pull_request:
    paths:
      - packages/x6-sites/**
      - examples/x6-example-sites/**
      - examples/x6-example-sites-helper/**
jobs:
  preview:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - uses: actions/checkout@v2
      - name: ðŸŒ±ã€€Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: ðŸš¸ã€€Setup yarn cacha
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      ## cache webpack(babel-loader, eslint-loader)
      - name: ðŸ’©ã€€Setup webpack cache
        uses: actions/cache@v2
        with:
          path: ~/.webpack
          key: ${{ runner.os }}-webpack-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-webpack-
      ## cache sites
      - name: ðŸ’©ã€€Setup sites cache
        uses: actions/cache@v2
        with:
          path: ./packages/x6-sites/static/demos
          key: ${{ runner.os }}-sites-${{ hashFiles('./packages/x6/package.json', './examples/x6-example-sites/**/src') }}
          restore-keys: |
            ${{ runner.os }}-sites-
      - name: ðŸŽ‰ã€€Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: âœ¨ã€€Deploy Sites
        uses: afc163/surge-preview@v1
        with:
          surge_token: ${{ secrets.SURGE_TOKEN }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          build: |
            yarn global add lerna
            yarn bootstrap
            yarn build:demos
            yarn build:sites
          dist: packages/x6-sites/public
