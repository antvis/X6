name: ðŸš€ã€€Deploy Sites
on:
  push:
    branches:
      - master
    paths:
      - packages/x6-sites/**
      - examples/x6-example-sites/**
      - examples/x6-example-sites-helper/**
  pull_request:
    paths:
      - packages/x6-sites/**
      - examples/x6-example-sites/**
      - examples/x6-example-sites-helper/**
jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
    - uses: actions/checkout@v2
    - name: ðŸŒ±ã€€Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - name: ðŸš¸ã€€Setup Cache
      uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: ðŸŽ‰ã€€Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: ðŸš§ã€€Prepare Environment
      run: |
        npm install -g yarn
        npm install -g lerna
    - name: ðŸš€ã€€Bootstrap
      run: |
        yarn bootstrap
    - name: ðŸ“¦ã€€Build Demos
      run: |
        yarn build:demos
    - name: ðŸ“¦ã€€Build Sites
      run: |
        yarn build:sites
    - name: âœ…ã€€Deploy sites
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./packages/x6-sites/public
        publish_branch: gh-pages
